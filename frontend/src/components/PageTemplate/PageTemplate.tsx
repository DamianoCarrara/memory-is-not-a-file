import Head from 'next/head'
import { ReactNode, forwardRef, ForwardedRef } from 'react'
import clsx from 'clsx'
import { Header } from '../Header/Header'
import { siteName } from '../../utils/config'
import { NavMenu } from '../NavMenu/NavMenu'
import { NavMenuLanguageSwitcher } from '../NavMenuLanguageSwitcher/NavMenuLanguageSwitcher'
import { FooterLanguageSwitcher } from '../FooterLanguageSwitcher/FooterLanguageSwitcher'
import { AlternateLang } from '../AlternateLang/AlternateLang'
import { Footer } from '../Footer/Footer'
import { useStyles } from './PageTemplate.styles'
import { isFeatureEnabled } from '../../utils/features'

export interface PageTemplateProps {
  children: ReactNode
  path: string
  yellowBackground?: boolean
  htmlTitle?: string
}

export const PageTemplate = forwardRef(
  (
    { children, path, htmlTitle, yellowBackground = false }: PageTemplateProps,
    ref: ForwardedRef<HTMLDivElement>
  ) => {
    const classes = useStyles()

    return (
      <div
        ref={ref}
        className={clsx(
          classes.pageTemplate,
          yellowBackground && classes.yellowBackground
        )}
      >
        <Head>
          <title>{htmlTitle ?? siteName}</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <AlternateLang path={path} />
        </Head>

        <Header>
          <NavMenu
            renderLanguageSwitcher={({ setIsMobileMenuOpen }) =>
              isFeatureEnabled('languageSwitcherInNavMenu') && (
                <NavMenuLanguageSwitcher
                  path={path}
                  onClick={() => setIsMobileMenuOpen(false)}
                />
              )
            }
          />
        </Header>

        <main className={clsx(classes.main)}>{children}</main>

        <Footer
          yellowBackground={yellowBackground}
          languageSwitcher={
            isFeatureEnabled('italianLanguage') && (
              <FooterLanguageSwitcher path={path} />
            )
          }
        />
      </div>
    )
  }
)

PageTemplate.displayName = 'PageTemplate'
